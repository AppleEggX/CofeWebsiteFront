//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CofeWebApplication.BasketServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coffee", Namespace="http://schemas.datacontract.org/2004/07/Pocos")]
    [System.SerializableAttribute()]
    public partial class Coffee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TastingNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Storage {
            get {
                return this.StorageField;
            }
            set {
                if ((this.StorageField.Equals(value) != true)) {
                    this.StorageField = value;
                    this.RaisePropertyChanged("Storage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Story {
            get {
                return this.StoryField;
            }
            set {
                if ((object.ReferenceEquals(this.StoryField, value) != true)) {
                    this.StoryField = value;
                    this.RaisePropertyChanged("Story");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TastingNote {
            get {
                return this.TastingNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.TastingNoteField, value) != true)) {
                    this.TastingNoteField = value;
                    this.RaisePropertyChanged("TastingNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class BasketItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoffeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoffeeName {
            get {
                return this.CoffeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoffeeNameField, value) != true)) {
                    this.CoffeeNameField = value;
                    this.RaisePropertyChanged("CoffeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class BasketDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paied {
            get {
                return this.PaiedField;
            }
            set {
                if ((this.PaiedField.Equals(value) != true)) {
                    this.PaiedField = value;
                    this.RaisePropertyChanged("Paied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumPrice {
            get {
                return this.SumPriceField;
            }
            set {
                if ((this.SumPriceField.Equals(value) != true)) {
                    this.SumPriceField = value;
                    this.RaisePropertyChanged("SumPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasketServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCoffees", ReplyAction="http://tempuri.org/IService1/GetAllCoffeesResponse")]
        CofeWebApplication.BasketServiceReference.Coffee[] GetAllCoffees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCoffees", ReplyAction="http://tempuri.org/IService1/GetAllCoffeesResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.Coffee[]> GetAllCoffeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCoffeeById", ReplyAction="http://tempuri.org/IService1/GetCoffeeByIdResponse")]
        CofeWebApplication.BasketServiceReference.Coffee GetCoffeeById(int coffee_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCoffeeById", ReplyAction="http://tempuri.org/IService1/GetCoffeeByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.Coffee> GetCoffeeByIdAsync(int coffee_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoBasket", ReplyAction="http://tempuri.org/IService1/AddtoBasketResponse")]
        CofeWebApplication.BasketServiceReference.BasketItemDTO AddtoBasket(int basketid, int coffeeid, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoBasket", ReplyAction="http://tempuri.org/IService1/AddtoBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO> AddtoBasketAsync(int basketid, int coffeeid, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBasketItem", ReplyAction="http://tempuri.org/IService1/EditBasketItemResponse")]
        CofeWebApplication.BasketServiceReference.BasketItemDTO EditBasketItem(int basketItemId, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBasketItem", ReplyAction="http://tempuri.org/IService1/EditBasketItemResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO> EditBasketItemAsync(int basketItemId, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFromBasket", ReplyAction="http://tempuri.org/IService1/DeleteFromBasketResponse")]
        void DeleteFromBasket(int basketid, int coffeeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFromBasket", ReplyAction="http://tempuri.org/IService1/DeleteFromBasketResponse")]
        System.Threading.Tasks.Task DeleteFromBasketAsync(int basketid, int coffeeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckOutBasket", ReplyAction="http://tempuri.org/IService1/CheckOutBasketResponse")]
        CofeWebApplication.BasketServiceReference.BasketDTO CheckOutBasket(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckOutBasket", ReplyAction="http://tempuri.org/IService1/CheckOutBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO> CheckOutBasketAsync(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasketItems", ReplyAction="http://tempuri.org/IService1/GetTheBasketItemsResponse")]
        CofeWebApplication.BasketServiceReference.BasketItemDTO[] GetTheBasketItems(int basket_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasketItems", ReplyAction="http://tempuri.org/IService1/GetTheBasketItemsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO[]> GetTheBasketItemsAsync(int basket_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBasketItems", ReplyAction="http://tempuri.org/IService1/GetAllBasketItemsResponse")]
        CofeWebApplication.BasketServiceReference.BasketItemDTO[] GetAllBasketItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBasketItems", ReplyAction="http://tempuri.org/IService1/GetAllBasketItemsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO[]> GetAllBasketItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistoryBasket", ReplyAction="http://tempuri.org/IService1/GetHistoryBasketResponse")]
        CofeWebApplication.BasketServiceReference.BasketDTO[] GetHistoryBasket(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistoryBasket", ReplyAction="http://tempuri.org/IService1/GetHistoryBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO[]> GetHistoryBasketAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasket", ReplyAction="http://tempuri.org/IService1/GetTheBasketResponse")]
        CofeWebApplication.BasketServiceReference.BasketDTO GetTheBasket(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasket", ReplyAction="http://tempuri.org/IService1/GetTheBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO> GetTheBasketAsync(int basketId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CofeWebApplication.BasketServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CofeWebApplication.BasketServiceReference.IService1>, CofeWebApplication.BasketServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CofeWebApplication.BasketServiceReference.Coffee[] GetAllCoffees() {
            return base.Channel.GetAllCoffees();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.Coffee[]> GetAllCoffeesAsync() {
            return base.Channel.GetAllCoffeesAsync();
        }
        
        public CofeWebApplication.BasketServiceReference.Coffee GetCoffeeById(int coffee_id) {
            return base.Channel.GetCoffeeById(coffee_id);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.Coffee> GetCoffeeByIdAsync(int coffee_id) {
            return base.Channel.GetCoffeeByIdAsync(coffee_id);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketItemDTO AddtoBasket(int basketid, int coffeeid, int amount) {
            return base.Channel.AddtoBasket(basketid, coffeeid, amount);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO> AddtoBasketAsync(int basketid, int coffeeid, int amount) {
            return base.Channel.AddtoBasketAsync(basketid, coffeeid, amount);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketItemDTO EditBasketItem(int basketItemId, int amount) {
            return base.Channel.EditBasketItem(basketItemId, amount);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO> EditBasketItemAsync(int basketItemId, int amount) {
            return base.Channel.EditBasketItemAsync(basketItemId, amount);
        }
        
        public void DeleteFromBasket(int basketid, int coffeeid) {
            base.Channel.DeleteFromBasket(basketid, coffeeid);
        }
        
        public System.Threading.Tasks.Task DeleteFromBasketAsync(int basketid, int coffeeid) {
            return base.Channel.DeleteFromBasketAsync(basketid, coffeeid);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketDTO CheckOutBasket(int basketId) {
            return base.Channel.CheckOutBasket(basketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO> CheckOutBasketAsync(int basketId) {
            return base.Channel.CheckOutBasketAsync(basketId);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketItemDTO[] GetTheBasketItems(int basket_id) {
            return base.Channel.GetTheBasketItems(basket_id);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO[]> GetTheBasketItemsAsync(int basket_id) {
            return base.Channel.GetTheBasketItemsAsync(basket_id);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketItemDTO[] GetAllBasketItems() {
            return base.Channel.GetAllBasketItems();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketItemDTO[]> GetAllBasketItemsAsync() {
            return base.Channel.GetAllBasketItemsAsync();
        }
        
        public CofeWebApplication.BasketServiceReference.BasketDTO[] GetHistoryBasket(int userId) {
            return base.Channel.GetHistoryBasket(userId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO[]> GetHistoryBasketAsync(int userId) {
            return base.Channel.GetHistoryBasketAsync(userId);
        }
        
        public CofeWebApplication.BasketServiceReference.BasketDTO GetTheBasket(int basketId) {
            return base.Channel.GetTheBasket(basketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.BasketServiceReference.BasketDTO> GetTheBasketAsync(int basketId) {
            return base.Channel.GetTheBasketAsync(basketId);
        }
    }
}
